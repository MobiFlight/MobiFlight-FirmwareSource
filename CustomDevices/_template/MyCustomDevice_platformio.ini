; ******************************************************************************************
; working environment for template of custom firmware
; ******************************************************************************************
; Build settings for the Arduino Mega with Custom Firmware Template
[env:custom_mega]
platform = atmelavr
board = megaatmega2560
framework = arduino
; nothing needs to be cahnged above this line
build_flags = 
	${env.build_flags}
	-DMF_CUSTOMDEVICE_SUPPORT=1
	;-DMF_CUSTOMDEVICE_HAS_UPDATE						; if the custom device needs to be updated, uncomment this. W/o the following define it will be done each loop()
	;-DMF_CUSTOMDEVICE_POLL_MS=10 						; time in ms between updating custom device, uncomment this if custom device needs to be updated regulary
	;-DCUSTOM_FIRMWARE_VERSION="1"						; TBD!! how to handle custom firmware versions!!
	'-DMOBIFLIGHT_TYPE="Custom Mega"'					; this must match with "MobiFlightType" within the .json file
	'-DMY_CUSTOM_TYPE="MyCustomType"'	 				; This define will be reported back to the UI, Multiple custom devices must be delimited by '|', Only custom devices which match this type can be added within the UI
	-I./_Boards/Atmel/Board_Mega						; Include the required board definition. If you need your own definition, adapt this to your path (e.g. -I./CustomDevices/_template/_Boards)
	-I./src/MF_CustomDevice								; don't change this one!
	-I./CustomDevices/_template							; Include files for your custom device, replace "_template" by your folder name
build_src_filter = 
	${env.build_src_filter}								; don't change this one!
	+<./MF_CustomDevice>								; don't change this one!
	+<../CustomDevices/_template>						; build files for your custom device, replace "_template" by your folder name
lib_deps = 
	${env.lib_deps}										; don't change this one!
	${env.custom_lib_deps_Atmel}						; don't change this one! You can add additional libraries if required
monitor_speed = 115200									; don't change this one!
extra_scripts = 
	${env.extra_scripts}								; don't change this one!

; Build settings for the Raspberry Pico with Custom Firmware Template
[env:custom_raspberrypico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino
board_build.core = earlephilhower
board_build.filesystem_size = 0M
lib_ldf_mode = chain+
upload_protocol = mbed
; nothing needs to be cahnged above this line
build_flags =
	${env.build_flags}
	-DMF_CUSTOMDEVICE_SUPPORT=1
	;-DMF_CUSTOMDEVICE_HAS_UPDATE						; if the custom device needs to be updated, uncomment this. W/o the following define it will be done each loop()
	;-DMF_CUSTOMDEVICE_POLL_MS=10 						; time in ms between updating custom device, uncomment this if custom device needs to be updated regulary
	;-DCUSTOM_FIRMWARE_VERSION="1"						; TBD!! how to handle custom firmware versions!!
	'-DMOBIFLIGHT_TYPE="Custom RaspiPico"'				; this must match with "MobiFlightType" within the .json file
	'-DMY_CUSTOM_TYPE="MyCustomType"'	 				; This define will be reported back to the UI, Multiple custom devices must be delimited by '|', Only custom devices which match this type can be added within the UI
	-I./_Boards/RaspberryPi/Pico						; Include the required board definition. If you need your own definition, adapt this to your path (e.g. -I./CustomDevices/_template/_Boards)
	-I./src/MF_CustomDevice								; don't change this one!
	-I./CustomDevices/_template							; Include files for your custom device, replace "_template" by your folder name
	-fpermissive										; don't change this one!
build_src_filter =
	${env.build_src_filter}								; don't change this one!
	+<./MF_CustomDevice>								; don't change this one!
	+<../CustomDevices/_template>						; build files for your custom device, replace "_template" by your folder name
lib_deps =
	${env.lib_deps}										; don't change this one!You can add additional libraries if required
monitor_speed = 115200									; don't change this one!
extra_scripts = 
	${env.extra_scripts}								; don't change this one!
