; PlatformIO Project Configuration File
;
; Supported platforms for the MobiFlight firmware are:
; atmega2560
; promicro
; uno
;
; Version numbers for releases are automatically applied by GitHub
; during the release build process based on the tag associated with
; the GitHub release.

; To ensure builds work correctly in GitHub the default_envs
; should always be set to all supported MobiFlight platforms.
; If you want to only build a single platform locally during
; development use VSCode to change the target to a non-default
; by clicking on the target name in the bottom status bar.
[platformio]

; Common build settings across all devices
[env]
lib_deps = 
	https://github.com/MobiFlight/LedControl#1.1.0
	waspinator/AccelStepper @ 1.61
	https://github.com/MobiFlight/LiquidCrystal_I2C#v1.1.4
	https://github.com/MobiFlight/Arduino-CmdMessenger#4.2.1
	ricaun/ArduinoUniqueID @ ^1.3.0
custom_lib_deps_Atmel =
	arduino-libraries/Servo @ 1.1.8
build_flags =
	-DMF_REDUCE_FUNCT_LEDCONTROL
	-DMAXCALLBACKS=35
	-DSERIAL_RX_BUFFER_SIZE=96
	-DMESSENGERBUFFERSIZE=96
	-DMAXSTREAMBUFFERSIZE=96
	-DDEFAULT_TIMEOUT=5000
;	-DDEBUG2CMDMESSENGER=1
	-I./src/MF_Analog
	-I./src/MF_Button
	-I./src/MF_Encoder
	-I./src/MF_InputShifter
	-I./src/MF_DigInMux
	-I./src/MF_LCDDisplay
	-I./src/MF_Output
	-I./src/MF_OutputShifter
	-I./src/MF_Segment
	-I./src/MF_Servo
	-I./src/MF_Stepper
	-I./src/MF_Modules
build_src_filter =
	+<*>
	-<./MF_CustomDevice>
extra_scripts =
	pre:get_version.py

; Build settings for the Arduino Mega
[env:mega]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_flags = 
	${env.build_flags}
	-DMF_CUSTOMDEVICE_SUPPORT=0
	'-DMOBIFLIGHT_TYPE="MobiFlight Mega"'
	-I./_Boards/Atmel/Board_Mega
build_src_filter = 
	${env.build_src_filter}
lib_deps = 
	${env.lib_deps}
	${env.custom_lib_deps_Atmel}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Arduino Pro Micro
[env:micro]
platform = atmelavr
board = sparkfun_promicro16
framework = arduino
build_flags = 
	${env.build_flags}
	-DMF_CUSTOMDEVICE_SUPPORT=0
	'-DMOBIFLIGHT_TYPE="MobiFlight Micro"'
	-I./_Boards/Atmel/Board_ProMicro
build_src_filter = 
	${env.build_src_filter}
lib_deps = 
	${env.lib_deps}
	${env.custom_lib_deps_Atmel}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}


; Build settings for the Arduino Uno
[env:uno]
platform = atmelavr
board = uno
framework = arduino
build_flags = 
	${env.build_flags}
	-DMF_CUSTOMDEVICE_SUPPORT=0
	'-DMOBIFLIGHT_TYPE="MobiFlight Uno"'
	-I./_Boards/Atmel/Board_Uno
build_src_filter = 
	${env.build_src_filter}
lib_deps = 
	${env.lib_deps}
	${env.custom_lib_deps_Atmel}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Arduino Nano
[env:nano]
platform = atmelavr
board = nanoatmega328
framework = arduino
build_flags = 
	${env.build_flags}
	-DMF_CUSTOMDEVICE_SUPPORT=0
	'-DMOBIFLIGHT_TYPE="MobiFlight Nano"'
	-I./_Boards/Atmel/Board_Nano
build_src_filter = 
	${env.build_src_filter}
lib_deps =
	${env.lib_deps}
	${env.custom_lib_deps_Atmel}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Raspberry Pico original
[env:raspberrypico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino
board_build.core = earlephilhower						; select new core
board_build.filesystem_size = 0M						; configure filesystem size. Default 0 Mbyte.
lib_ldf_mode = chain+
upload_protocol = mbed									; for debugging upoading can be changed to picoprobe
;debug_tool = picoprobe									; and uncomment this for debugging w/ picoprobe
build_flags =
	${env.build_flags}
	-DMF_CUSTOMDEVICE_SUPPORT=0
	'-DMOBIFLIGHT_TYPE="MobiFlight RaspiPico"'			; this must match with "MobiFlightType" within the .json file
	-I./_Boards/RaspberryPi/Pico
	-fpermissive
build_src_filter =
	${env.build_src_filter}
lib_deps =
	${env.lib_deps}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; ******************************************************************************************
; working environments for templates of custom firmware
; ******************************************************************************************
; Build settings for the Arduino Mega with Custom Firmware Template
[env:custom_mega]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_flags = 
	${env.build_flags}
	-DMF_CUSTOMDEVICE_SUPPORT=1
	;-DMF_CUSTOMDEVICE_POLL_MS=10 						; time in ms between updating custom device, uncomment this if custom device needs to be updated regulary
	;-DCUSTOM_FIRMWARE_VERSION="1"						; TBD!! how to handle custom firmware versions!!
	'-DMOBIFLIGHT_TYPE="Custom Mega"'					; this must match with "MobiFlightType" within the .json file
	'-DMY_CUSTOM_TYPE="MyCustomType"'	 				; This define will be reported back to the UI, Multiple custom devices must be delimited by '|', Only custom devices which match this type can be added within the UI
	-I./_Boards/Atmel/Board_Mega
	-I./src/MF_CustomDevice
	-I./CustomDevices/_template
build_src_filter = 
	${env.build_src_filter}
	+<./MF_CustomDevice>
	+<../CustomDevices/_template>
lib_deps = 
	${env.lib_deps}
	${env.custom_lib_deps_Atmel}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Raspberry Pico with Custom Firmware Template
[env:custom_raspberrypico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino
board_build.core = earlephilhower						; select new core
board_build.filesystem_size = 0M						; configure filesystem size. Default 0 Mbyte.
lib_ldf_mode = chain+
upload_protocol = mbed									; for debugging upoading can be changed to picoprobe
;debug_tool = picoprobe									; and uncomment this for debugging w/ picoprobe
build_flags =
	${env.build_flags}
	-DMF_CUSTOMDEVICE_SUPPORT=1
	;-DMF_CUSTOMDEVICE_POLL_MS=10 						; time in ms between updating custom device, uncomment this if custom device needs to be updated regulary
	;-DCUSTOM_FIRMWARE_VERSION="1"						; TBD!! how to handle custom firmware versions!!
	'-DMOBIFLIGHT_TYPE="Custom RaspiPico"'				; this must match with "MobiFlightType" within the .json file
	'-DMY_CUSTOM_TYPE="MyCustomType"'	 				; This define will be reported back to the UI, Multiple custom devices must be delimited by '|', Only custom devices which match this type can be added within the UI
	-I./_Boards/RaspberryPi/Pico
	-I./src/MF_CustomDevice
	-I./CustomDevices/_template
	-fpermissive
build_src_filter =
	${env.build_src_filter}
	+<./MF_CustomDevice>
	+<../CustomDevices/_template>
lib_deps =
	${env.lib_deps}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}
